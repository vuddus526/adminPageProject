<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="memo">

	<sql id="search">
		<choose>
			<when test="searchGubun == 'writer_content' and searchGubun != null and searchGubun != ''">
				and (writer like '%' || #{searchData} || '%' or content like '%' || #{searchData} || '%')
			</when>
			<when test="searchGubun != null and searchGubun != '' and searchData != null and searchData != ''">
				and (${searchGubun} like '%' || #{searchData} || '%')
			</when>
			<otherwise >
			</otherwise>
		</choose>
	</sql>

	<select id="getSelectAll" resultType="com.cpy.springPortfolio.memo.model.dto.MemoDTO">
		select * from (select A.*, Rownum Rnum from (
				select * from memo where 1=1
				<include refid="search"></include>
		<![CDATA[
				order by no desc
			) A) where Rnum >= #{startRecord} and Rnum <= #{lastRecord}
		]]>
	</select>
	
	<select id="getSelectOne" resultType="com.cpy.springPortfolio.memo.model.dto.MemoDTO">
		select * from (select b.*, 
						LAG(no) over (order by no desc) preNo, 
						LAG(writer) over (order by no desc) preWriter, 
						LEAD(no) over (order by no desc) nxtNo, 
						LEAD(writer) over (order by no desc) nxtWriter 
						from memo b order by no desc
						) where no = #{no} 
	</select>
	
	<insert id="setInsert">
		insert into memo values (seq_memo.nextval, #{writer}, #{content}, sysdate )
	</insert>
	
	<update id="setUpdate">
		update memo set 
		writer = #{writer}, content = #{content}
		where no = #{no}
	</update>
	
	<delete id="setDelete">
		delete from memo where no = #{no }
	</delete>
	
	<select id="getTotalRecord" resultType="int">
		select count(*) counter from memo where 1=1
		<include refid="search"></include>
	</select>
	
</mapper>
